@using Cas.SaaS.Contracts.Application;
@using Microsoft.AspNetCore.Components.Authorization
@inject Helpers.HttpAdminHelper Http

<nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
    <div class="container">
        <a class="navbar-brand">CaSaaS</a>
        <div class="d-sm-inline-flex flex-sm-row-reverse">
            <AuthorizeView>
                <Authorized>
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <NavLink class="nav-link text-dark" href="logout">
                                <span class="oi oi-account-logout" aria-hidden="true"></span> Выйти из системы
                            </NavLink>
                        </li>
                    </ul>
                </Authorized>
                <NotAuthorized>
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <NavLink class="nav-link text-dark" href="" Match="NavLinkMatch.All">
                                <span class="oi oi-home" aria-hidden="true"></span> Главная
                            </NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink class="nav-link text-dark" href="tariffs">
                                <span class="oi oi-project" aria-hidden="true"></span> Тарифные планы
                            </NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink class="nav-link text-dark" href="login">
                                <span class="oi oi-account-login" aria-hidden="true"></span> Войти в систему
                            </NavLink>
                        </li>
                    </ul>
                </NotAuthorized>
            </AuthorizeView>
            <AuthorizeView Roles="Admin">
                <ul class="navbar-nav flex-grow-1">
                    <li class="nav-item">
                        <NavLink class="nav-link text-dark" href="admin/users">
                            <span class="oi oi-people" aria-hidden="true"></span> Список пользователей
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link text-dark" href="admin/applications">
                            <span class="oi oi-monitor" aria-hidden="true"></span> Список заявок
                            @if (viewCount != string.Empty)
                            {
                                <span class="badge bg-danger m-2">@viewCount</span>
                            }
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link text-dark" href="admin/deliveries">
                            <span class="oi oi-file" aria-hidden="true"></span> Список заказов
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link text-dark" href="admin/tariffs">
                            <span class="oi oi-project" aria-hidden="true"></span> Тарифы
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link text-dark" href="" Match="NavLinkMatch.All">
                            <span class="oi oi-home" aria-hidden="true"></span> Главная
                        </NavLink>
                    </li>
                </ul>
            </AuthorizeView>
            <AuthorizeView Roles="Client">
                <ul class="navbar-nav flex-grow-1">
                    <li class="nav-item">
                        <NavLink class="nav-link text-dark" href="/employees">
                            <span class="oi oi-people" aria-hidden="true"></span> Сотрудники
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link text-dark" href="/brigades">
                            <span class="oi oi-wrench" aria-hidden="true"></span> Наряды
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link text-dark" href="/services">
                            <span class="oi oi-basket" aria-hidden="true"></span> Услуги
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link text-dark" href="/client/settings">
                            <span class="oi oi-cog" aria-hidden="true"></span> Настройки профиля
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link text-dark" href="" Match="NavLinkMatch.All">
                            <span class="oi oi-home" aria-hidden="true"></span> Главная
                        </NavLink>
                    </li>
                </ul>
            </AuthorizeView>
        </div>
    </div>
</nav>

@code {
    System.Threading.Timer? timer;
    private string? viewCount { get; set; }
    private ApplicationResultDTO applicationResultDTO = new ApplicationResultDTO();
    private static bool isAdmin { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        timer = new System.Threading.Timer(SetCount, new System.Threading.AutoResetEvent(false), 1000, 1000);
    }

    private async void SetCount(object stateInfo)
    {
        if (isAdmin)
        {
            applicationResultDTO = await Http.GetApplicationsIsCheckAsync();
            if (applicationResultDTO.Succeeded)
            {
                if (Convert.ToInt32(applicationResultDTO.Message) > 99) viewCount = "99+";
                else if (applicationResultDTO.Message == "0") viewCount = string.Empty;
                else viewCount = applicationResultDTO.Message;
                isAdmin = true;
            }
            else
                isAdmin = false;
        }
        await InvokeAsync(StateHasChanged);
    }
}
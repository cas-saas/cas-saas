@page "/admin/users"
@using Cas.SaaS.Contracts.User;
@using Microsoft.AspNetCore.Authorization;
@inject Helpers.HttpAdminHelper Http
@attribute [Authorize(Roles = "Admin")]

<PageTitle>Пользователи</PageTitle>

<h1>Список пользователей</h1>

<div class="form-group">
    <a class="btn btn-success" href="admin/user/create">Добавить клиента</a>
</div>

@if (users is null)
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Загрузка...</span>
        </div>
    </div>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Идентификатор</th>
                <th>Логин</th>
                <th>ФИО</th>
                <th>Номер телефона</th>
                <th>Почтовый адрес</th>
                <th>Роль в системе</th>
                <th>Действия</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
                <tr>
                    <td>@user.Id</td>
                    <td>@user.Login</td>
                    <td>@user.FIO</td>
                    <td>@user.Phone</td>
                    <td>@user.Email</td>
                    <td>@user.Role</td>
                    <th>Действия</th>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private UserDto[]? users;

    protected override async Task OnInitializedAsync()
    {
        users = await Http.GetUsersAsync();
    }
}

@page "/services"
@using Cas.SaaS.Contracts.Service;
@using Microsoft.AspNetCore.Authorization;
@inject Helpers.HttpClientHelper Http
@attribute [Authorize(Roles = "Client")]

<PageTitle>Услуги</PageTitle>

<h1>Список услуг</h1>

<div class="form-group">
    <a class="btn btn-success" href="service/create">Добавить услугу</a>
</div>

@if (services is null)
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Загрузка...</span>
        </div>
    </div>
}
else if (services.Count() <= 0)
{
    <div class="text-center">
        <p>Список услуг пуст!</p>
    </div>
}
else
{
    @foreach (var service in services)
    {
        <div>
            <hr />
            <dl class="row">
                <dt class="col-sm-2">
                    Идентификатор
                </dt>
                <dd class="col-sm-10">
                    @service.Id
                </dd>
                <dt class="col-sm-2">
                    Название
                </dt>
                <dd class="col-sm-10">
                    @service.Name
                </dd>
                <dt class="col-sm-2">
                    Описание
                </dt>
                <dd class="col-sm-10">
                    @service.Description
                </dd>
                <dt class="col-sm-2">
                    Список инструментов
                </dt>
                <dd class="col-sm-10">
                    @foreach (var tool in service.Tools)
                    {
                        <p>@tool</p>
                    }
                </dd>
            </dl>
            <div class="row">
                <a href="/service/@service.Id/update" class="btn btn-primary col m-1">Обновить</a>
                <button @onclick="() => ServiceDeleteAsync(service.Id)" class="btn btn-danger col m-1">Удалить</button>
            </div>
        </div>
    }
}

@code {
    private ServiceDto[]? services;

    protected override async Task OnInitializedAsync()
    {
        services = await Http.GetServicesAsync();
    }

    public async Task ServiceDeleteAsync(Guid id)
    {
        await Http.DeleteServiceById(id);
        await OnInitializedAsync();
    }
}

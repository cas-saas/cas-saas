@page "/login"
@using Cas.SaaS.Contracts.User
@inject Helpers.HttpAuthHelper Http
@inject NavigationManager NavigationManager

<PageTitle>Вход в систему</PageTitle>

<EditForm Model="@userLoginDTO" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">Вход</div>
                <div class="card-body">
                    <div class="form-group row p-2">
                        <label class="col-md-4 col-form-label text-md-right">Логин</label>
                        <div class="col-md-6">
                            <InputText class="form-control" id="Login" @bind-Value="userLoginDTO.Login" placeholder="Логин" />
                        </div>
                    </div>

                    <div class="form-group row p-2">
                        <label class="col-md-4 col-form-label text-md-right">Пароль</label>
                        <div class="col-md-6">
                            <InputText class="form-control" id="Password" @bind-Value="userLoginDTO.Password" placeholder="Пароль" />
                        </div>
                    </div>
                    @if (!loggingIn)
                    {
                        <div class="col-md-6 offset-md-4 p-4">
                            <button type="submit" class="btn btn-primary">
                                Войти
                            </button>
                            <a href="#" class="btn btn-link">
                                Забыли пароль?
                            </a>
                        </div>
                    }
                    else
                    {
                        <div class="d-flex justify-content-center">
                            <div class="spinner-border" role="status">
                                <span class="visually-hidden">Загрузка...</span>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    private UserLoginDto userLoginDTO = new();
    private bool loggingIn;

    private async Task HandleValidSubmit()
    {
        loggingIn = true;

        var result = await Http.LoginUser(userLoginDTO);

        if (result.Succeeded)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            var errors = new Dictionary<string, List<string>>();
            errors.Add("", new List<string> { result.Message });
        }

        loggingIn = false;
    }
}